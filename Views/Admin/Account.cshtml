@inject Capstone.Repository.IRepository.IAdminRepository _adminRepository
@model Capstone.Models.AccountViewModel

@{
    var accounts = _adminRepository.GetAccounts();
}

<div>
    <div class="d-flex justify-content-between">
        <div>
            <h1>Inventory</h1>
        </div>
        <div>
            <button class="btn btn-primary" data-toggle="modal" data-target="#addAccountModal">Add Account</button>
        </div>
    </div>

    <div class="table-responsive container-fluid">
        <table class="table table-bordered accountTable">
            <tr class="row">
                <th class="col-1">Account Level</th>
                <th class="col-2">First Name</th>
                <th class="col-2">Last Name</th>
                <th class="col-2">Phone Number</th>
                <th class="col-3">Email</th>
                <th class="col-1">Password</th>
                <th class="col-1">Actions</th>
            </tr>
            @foreach (var account in accounts)
            {
                var EditData = new Dictionary<string, string>
                            {
                                { "id", account.Id.ToString()}
                            };
                <tr class="row">
                    <input type="hidden" value="@account.Id" />
                    <td class="col-1 accountLevel">@account.AccountLevel</td>
                    <td class="col-2 firstName">@account.FirstName</td>
                    <td class="col-2 lastName">@account.LastName</td>
                    <td class="col-2 phone">@account.PhoneNumber</td>
                    <td class="col-3 email">@account.Email</td>
                    <td class="col-1 password">@account.Password</td>
                    @if (account.AccountLevel > 0)
                    {
                        <td class="col-1">
                            <a href="#" class="accountEdit">Edit</a>
                            <a asp-action="AccountDelete" asp-controller="Admin" asp-all-route-data="EditData">Delete</a>
                        </td>
                    }

                </tr>
            }

        </table>
    </div>

    <!-- add account -->
    <div class="modal fade" id="addAccountModal" tabindex="-1" role="dialog" aria-labelledby="addAccountModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("AccountAdd", "Admin", FormMethod.Get))
                {
                    <div class="modal-header">
                        <h5 class="modal-title" id="addAccountModalLabel">Add Account</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.AccountLevel, new { id = "accountLevel", @class="hidden" })
                            @Html.LabelFor(m => m.AccountLevel, new { @class = "form-label hidden" })
                            @*<input type="text" id="accountLevel" name="accountLevel" class="form-control" />
                                <label class="form-label" for="accountLevel">Account Level</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", id = "firstName", type = "text" })
                            @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })

                            @*<input type="text" id="firstName" name="firstName" class="form-control" />
                                <label class="form-label" for="firstName">First Name</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", id = "lastName", type = "text" })
                            @Html.LabelFor(m => m.LastName, new { @class = "form-label" })
                            @*<input type="text" id="lastName" name="lastName" class="form-control" />
                                <label class="form-label" for="lastName">Last Name</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "emailAddress", type = "text" })
                            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                            @*<input type="text" id="emailAddress" name="emailAddress" class="form-control" />
                                <label class="form-label" for="emailAddress">Email Address</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", id = "phoneNumber", type = "text" })
                            @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                            @*<input type="text" id="phoneNumber" name="phoneNumber" class="form-control" />
                                <label class="form-label" for="phoneNumber">Phone Number</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id = "password", type = "text" })
                            @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                            @*<input type="password" id="password" name="password" class="form-control" />
                                <label class="form-label" for="password">Password</label>*@
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- edit account -->
    <div class="modal fade" id="editAccountModal" tabindex="-1" role="dialog" aria-labelledby="editAccountModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @using (Html.BeginForm("AccountEdit", "Admin", FormMethod.Get))
                {
                    <div class="modal-header">
                        <h5 class="modal-title" id="editAccountModalLabel">edit Account</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">

                        @Html.HiddenFor(m => m.Id, new { id = "accountId" })
                        @*<input type="hidden" id="accountId" name="id" value="" />*@

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.AccountLevel, new { @class = "form-control", id = "accountLevel", type = "text", @value="1" })
                            @Html.LabelFor(m => m.AccountLevel, new { @class = "form-label" })
                            @*<input type="text" id="accountLevel" name="accountLevel" class="form-control" />
                                <label class="form-label" for="accountLevel">Account Level</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", id = "firstName", type = "text" })
                            @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })

                            @*<input type="text" id="firstName" name="firstName" class="form-control" />
                                <label class="form-label" for="firstName">First Name</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", id = "lastName", type = "text" })
                            @Html.LabelFor(m => m.LastName, new { @class = "form-label" })
                            @*<input type="text" id="lastName" name="lastName" class="form-control" />
                                <label class="form-label" for="lastName">Last Name</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", id = "emailAddress", type = "text" })
                            @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                            @*<input type="text" id="emailAddress" name="emailAddress" class="form-control" />
                                <label class="form-label" for="emailAddress">Email Address</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", id = "phoneNumber", type = "text" })
                            @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                            @*<input type="text" id="phoneNumber" name="phoneNumber" class="form-control" />
                                <label class="form-label" for="phoneNumber">Phone Number</label>*@
                        </div>

                        <div class="form-outline mb-4">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id = "password", type = "text" })
                            @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                            @*<input type="password" id="password" name="password" class="form-control" />
                                <label class="form-label" for="password">Password</label>*@
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>


</div>


@section Scripts{
    <script>
        function clearFields() {
            $('.modal-body #accountId').val('');
            $('.modal-body #firstName').val('');
            $('.modal-body #lastName').val('');
            $('.modal-body #phoneNumber').val('');
            $('.modal-body #emailAddress').val('');
            $('.modal-body #password').val('');
            $('.modal-body #accountLevel').val('1');
        }

        $(function () {
            clearFields();

            $('#addAccountModal').on('hidden.bs.modal', function () {
                $('.modal-body #accountId').val('');
                $('.modal-body #firstName').val('');
                $('.modal-body #lastName').val('');
                $('.modal-body #phoneNumber').val('');
                $('.modal-body #emailAddress').val('');
                $('.modal-body #password').val('');
                $('.modal-body #accountLevel').val('1');
            });

            $('.accountTable .accountEdit').on('click', function (evt) {
                var accountId = $(this).parent().parent().children('input').val();
                var firstName = $(this).parent().parent().children('.firstName').html();
                var lastName = $(this).parent().parent().children('.lastName').html();
                var phone = $(this).parent().parent().children('.phone').html();
                var email = $(this).parent().parent().children('.email').html();
                var password = $(this).parent().parent().children('.password').html();
                var accountLevel = $(this).parent().parent().children('.accountLevel').html();
                $('#editAccountModal #accountId').val(accountId);
                $('#editAccountModal #firstName').val(firstName);
                $('#editAccountModal #lastName').val(lastName);
                $('#editAccountModal #phoneNumber').val(phone);
                $('#editAccountModal #emailAddress').val(email);
                $('#editAccountModal #password').val(password);
                $('#editAccountModal #accountLevel').val(accountLevel);

                $('#editAccountModal').modal('show');
            });

        });
    </script>
}

