@model Capstone.Models.ProductViewModel

@{
    ViewData["Title"] = "Product";
}

<div>
    <div class="d-flex justify-content-between">
        <div>
            <h1>Products</h1>
        </div>
        <div>
            <button class="btn btn-primary" data-toggle="modal" data-target="#addProductModal">Add Product</button>
        </div>
    </div>

    <div class="table-responsive container">
        <table class="table table-bordered inventoryTable">
            <tr class="row">
                <th class="col-6">Name</th>
                <th class="col-3">Price</th>
                <th class="col-3">Actions</th>
            </tr>

        </table>
    </div>

</div>

<!-- add account -->
<div class="modal fade" id="addProductModal" tabindex="-1" role="dialog" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @using (Html.BeginForm("AccountAdd", "Admin", FormMethod.Get))
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="addProductModalLabel">Add Account</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-outline mb-4">
                        @Html.TextBoxFor(m => m.Name, new {  @class = "form-control", id = "name", type = "text" })
                        @Html.LabelFor(m => m.Name, new { @class = "form-label" })
                        @*<input type="text" id="accountLevel" name="accountLevel" class="form-control" />
                            <label class="form-label" for="accountLevel">Account Level</label>*@
                    </div>

                    <div class="form-outline mb-4">
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", id = "price", type = "number" })
                        @Html.LabelFor(m => m.Price, new { @class = "form-label" })

                        @*<input type="text" id="firstName" name="firstName" class="form-control" />
                            <label class="form-label" for="firstName">First Name</label>*@
                    </div>

                    <div class="form-outline mb-4">
                        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", id = "price", type = "number" })
                        @Html.LabelFor(m => m.Price, new { @class = "form-label" })

                        @*<input type="text" id="firstName" name="firstName" class="form-control" />
                            <label class="form-label" for="firstName">First Name</label>*@
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script>
    </script>
}

